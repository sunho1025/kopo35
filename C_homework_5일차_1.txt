// 5 day homework_1
// quick sorting
#include <stdio.h>

void quickSort(int arr[], int x, int y)
{
    int start = x;
    int end = y;
    int pivot = arr[(start + end) / 2]; //기준값 설정, 배열의 중간 인덱스
    int temp;
    do {
        while (arr[start] < pivot) {    // start를 인덱스로 가지는 배열값이 pivot보다 큰 값을 만나거나 pivot을 만날 때까지 
            start++;
        }
        while (arr[end] > pivot) {   // end를 인덱스로 가지는 배열값이 pivot보다 작은 값을 만나거나 pivot을 만날 때까지 
            end--;
        }
        if (start <= end)    // start가 end보다 왼쪽에 있다면 교환 
        {
            temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            start++;
            end--;
        }
      } while (start<= end);    // start가 end 보다 오른쪽에 있을 때까지 반복 
    
    
    if (x < end) {
        quickSort(arr, x, end);    // 왼쪽 배열 재귀적으로 반복 
    }
    if (start < y) {
        quickSort(arr, start, y);    // 오른쪽 배열 재귀적으로 반복 
    }
}
void main() {
    int arr[10] = {6, 1, -4, 10, 5, 2, 8, 9, -3, 3};
    int len = sizeof(arr) / sizeof(int);
    printf("정렬 전 : ");
    for (int i = 0; i < len; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    
    quickSort(arr, 0, len-1);
    printf("정렬 후 : ");
    for (int i = 0; i < len; i++) {
        printf("%d ", arr[i]);
    }
}
