#include <stdio.h>
#include <time.h>
#define TRUE 1

int is_leap(int yyyy) {
	if (yyyy % 400 == 0) {
		return 1;
	} else if ((yyyy % 100 != 0) && (yyyy % 4 == 0)) {
		return 1;
	}
	return 0;
}
// 연, 월, 일을 일 수로 변환
int date_to_days(int year, int month, int day) {
    int days = 0;
    int y, m;
    int day_month[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

    for (y = 1; y < year; y++) {
        days += 365 + is_leap(y);
    }

    for (m = 1; m < month; m++) {
        days += day_month[m];
        if (m == 2 && is_leap(year)) days += 1;
    }

    days += day;
    return days;
}

// 날짜 입력
void day_input() {
	time_t t = time(NULL);
	struct tm tm = *localtime(&t);
	int current_year = tm.tm_year + 1900;
	int current_month = tm.tm_mon + 1;
	int current_day = tm.tm_mday;
    
	int days; 
	while(TRUE) {
		printf("날짜를 입력해주세요 (예: 20250615) >> ");
    	if(scanf("%d", &days) == 1) {
    		int target_year = extract_year(days);
    		int target_month = extract_month(days);
    		int target_day = extract_day(days);
    		if (target_year < 10000 && (target_month < 13 && target_month > 0) && (target_day > 0 && target_day < 32)) {
    			break;
			} else {
				printf("8자리를 정확히 입력해주세요!\n"); 
				while(getchar() !='\n');
				continue;
				
			} 
		}else {
				printf("숫자만 입력해주세요.\n"); 
				while(getchar() !='\n');
				continue;
		}
    }
    int target_year = extract_year(days);
    int target_month = extract_month(days);
    int target_day = extract_day(days);
    int today_days = date_to_days(current_year, current_month, current_day);
    int target_days = date_to_days(target_year, target_month, target_day);
	printf("D-day : %d일\n", target_days - today_days);
}

// 날짜 분해 함수
int extract_year(int days) {
    return days / 10000;
}
int extract_month(int days) {
    return (days / 100) % 100;
}
int extract_day(int days) {
    return days % 100;
}

void main() {
    day_input();
}