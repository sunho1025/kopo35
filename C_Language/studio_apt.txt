#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LINE 256
#define MAX_GROUPS 1000

typedef struct {
    char gu[50];
    int year;
    int contract;
    float total_cost_per_area;
} Group;

char* remove_comma(char *str) {
    static char cleaned[20];
    int i;
    int j = 0;
    for (i = 0; str[i]; i++) {
        if (str[i] != ',') {
            cleaned[j++] = str[i];
        }
    }
    cleaned[j] = '\0';
    return cleaned;
}

int main() {
    FILE *fp = fopen("studio_apt.csv", "r");
    if (!fp) {
        perror("파일 열기 실패");
        return 1;
    }

    char line[MAX_LINE];
    fgets(line, sizeof(line), fp); // 헤더 스킵

    Group groups[MAX_GROUPS];
    int group_count = 0;

    while (fgets(line, sizeof(line), fp)) {
        char *token;
        char gu[50];
        int year;
        float area, cost;

        // 1. skip 시
        token = strtok(line, ","); // 시
        token = strtok(NULL, ","); // 구
        strcpy(gu, token);

        token = strtok(NULL, ","); // 전용면적
        area = atof(token);

        token = strtok(NULL, ","); // 계약년
        year = atoi(token);

        token = strtok(NULL, ","); // 계약월 (skip)
        token = strtok(NULL, ","); // 계약일 (skip)
        token = strtok(NULL, ","); // 전세금액
		char *cleaned = remove_comma(token);
		cleaned[strcspn(cleaned, "\r\n")] = '\0';  // \n 제거
		cost = atof(cleaned);
        float cost_per_area = cost / area;

        // 그룹핑
        int found = 0;
        int i;
        for (i = 0; i < group_count; i++) {
            if (strcmp(groups[i].gu, gu) == 0 && groups[i].year == year) {
                groups[i].contract++;
                groups[i].total_cost_per_area += cost_per_area;
                found = 1;
                break;
            }
        }

        if (!found) {
            strcpy(groups[group_count].gu, gu);
            groups[group_count].year = year;
            groups[group_count].contract = 1;
            groups[group_count].total_cost_per_area = cost_per_area;
            group_count++;
        }
    }

    fclose(fp);

    printf("자치구,year,contract,cost_per_area\n");
    int i;
    for (i = 0; i < group_count; i++) {
        float avg = groups[i].total_cost_per_area / groups[i].contract;
        printf("%s,%d,%d,%.2f\n",
               groups[i].gu,
               groups[i].year,
               groups[i].contract,
               avg);
    }

    // 2?? 파일 저장
    FILE *out = fopen("studio_apt_2.csv", "w");
    if (!out) {
        perror("출력 파일 열기 실패");
        return 1;
    }

    fprintf(out, "자치구,year,contract,cost_per_area\n");
    for (i = 0; i < group_count; i++) {
        float avg = groups[i].total_cost_per_area / groups[i].contract;
        fprintf(out, "%s,%d,%d,%.2f\n",
                groups[i].gu,
                groups[i].year,
                groups[i].contract,
                avg);
    }

    fclose(out);
    printf("\n studio_apt_2.csv 생성 완료\n");
    return 0;
}