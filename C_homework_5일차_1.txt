// 5 day homework_1
// quick sorting
#include <stdio.h>
void quicksort(int a[], int start, int end) {
    if (start >= end) {
        return;
    }
    int left = start;
    int right = end;
    int index = (start + end) / 2;
    int pivot = a[index];
    int temp;
    
    while (left <= right) {
        while (a[left] < pivot) { //pivot보다 작은 값을 탐색, 큰 값이 나오면 종료
            left++;
        }
        while (a[right] > pivot) { //pivot보다 큰 값을 탐색, 작은 값이 나오면 종료
            right--;
        }
        if (left <= right) { // 위 두가지 while문을 통해서 교환해야할
            temp = a[left];  // 큰수와 작은수의 인덱스를 확인하였고 그 두수를 교환
            a[left] = a[right];
            a[right] = temp;
            
            left++;  //교환이 끝나면 인덱스를 변경시켜줌
            right--;
            //종료시점에서는 left가 right보다 크게 변함
        }
    } // 이부분 까지 pivot을 기준으로 파티셔닝닝
    
    //재귀호출
    quicksort(a, start, right);  //right는 pivot보다 작은 수의 끝 인덱스를 나타냄
    quicksort(a, left, end);  //left는 pivot보다 큰 수의 처음 인덱스를 나타냄냄
}

int main()
{
    int a[5] = {2, 9, 7, 1, 3};
    int end = sizeof(a)/sizeof(int);
    for (int i = 0; i < end; i++) {
        printf("%d ", a[i]);
    }
    printf("\n");
    quicksort(a, 0, end - 1);
    
    for (int i = 0; i < end ; i++) {
        printf("%d ", a[i]);
    }
    return 0;
}
